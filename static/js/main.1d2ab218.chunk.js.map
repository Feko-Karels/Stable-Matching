{"version":3,"sources":["reportWebVitals.js","components/block.jsx","components/button.jsx","components/slider.jsx","components/stablematching.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Block","props","state","arr","this","name","className","map","item","index","React","Component","Button","onClick","text","Slider","onInput","defaultValue","id","type","min","max","StableMatching","generateData","size","parseInt","document","getElementById","value","setState","algorithm","readyAllocation","LEFT","Array","RIGHT","i","setTimeout","fillArray","renderBlocks","adjustLine","boysFirst","allocation","unmatched","choice","partner","stable","color","COLORS","pending","ready","checkAllocation","drawLines","girlsFirst","length","galeShapley","leftAllocation","fill","rightAllocation","someoneUnmatched","currentLeftIndex","oldPartner","nChoiceOld","getNChoice","console","log","checkAllocations","testAllocation","adjust","adjustBlocks","leftBlocks","rightBlocks","l","element","e","String","fromCharCode","unshift","r","currIndex","colorblindMode","colorBlind","style","backgroundImage","setCounter","val","Math","floor","innerHTML","lines","unstable","unstableColorBlind","window","addEventListener","removeEventListener","left","ARR","usedNumber","j","number","randomNumber","start","end","random","children","right","leftRects","rightRects","push","getBoundingClientRect","shift","rect1","rect2","x1","y1","top","bottom","x2","y2","width","height","stroke","strokeWidth","getRects","currentPartner","error","getLine","adjustSvgContainer","collection","getElementsByClassName","from","forEach","documentElement","scrollHeight","rightallocation","nChoice","isStable","preferences","countPreferdLeft","countPreferdRight","prefers","preferdChoice","rightN","newRightN","leftN","newLeftN","rightContainer","leftContainer","menuRect","menu","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d2ab218.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './css/block.css'\r\n\r\nexport default class Block extends React.Component{  //visual only\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {arr: props.arr};\r\n    }\r\n  \r\n    render(){\r\n  \r\n      if (this.props.arr == null && this.props.name == null){\r\n        return(\r\n          <span className = \"Block\">Props missing</span>\r\n        );\r\n      }\r\n      if(this.props.name == null){\r\n        return(\r\n          <span className = \"Block\">Name missing</span>\r\n        );\r\n      }\r\n      if(this.props.arr == null){\r\n        return(\r\n          <table className = \"Block\">\r\n            <tbody>\r\n              <tr>\r\n                <th>{this.props.name}</th>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n  \r\n      return(\r\n        <div className =\"ComponentBlock\">\r\n          <table className = \"Block\">\r\n            <tbody>\r\n              <tr >\r\n                <th className=\"Name\">{this.props.name}</th>\r\n                <th>{this.state.arr.map((item, index) => (\r\n                  <div key={index} className=\"element\">&nbsp;{item}&nbsp;</div>\r\n                  ))}\r\n                </th>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport './css/button.css'\r\n\r\nexport default class Button extends React.Component{\r\n  \r\n  render(){\r\n      return( \r\n        <div className=\"button\" onClick = {this.props.onClick}>{this.props.text}</div>\r\n      );\r\n    }\r\n}","import React from 'react'\r\nimport './css/slider.css'\r\n\r\nexport default class Slider extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"slider\">\r\n                <input onInput={this.props.onInput} defaultValue =\"7\" id=\"slider\" type=\"range\" min ={this.props.min} max={this.props.max}></input>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Block from './block.jsx';\r\nimport Button from './button.jsx';\r\nimport Slider from './slider.jsx'\r\nimport './css/stablematching.css'\r\n\r\nexport default class StableMatching extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      leftBlocks: [],\r\n      rightBlocks: [],\r\n      size: 6,\r\n      lines: null,\r\n      algorithm: \"null\",\r\n      readyAllocation : null,\r\n      COLORS: {\r\n        unstable: \"red\", \r\n        pending: \"yellow\",  \r\n        stable: \"green\",\r\n        unstableColorBlind: \"blue\"\r\n      },\r\n      colorBlind: false \r\n    };\r\n    this.LEFT = [\r\n      [3,2,5,1,4],\r\n      [1,2,5,3,4],\r\n      [4,3,2,1,5],\r\n      [1,3,4,2,5],\r\n      [1,2,4,5,3]\r\n    ];\r\n    this.RIGHT = [\r\n      [3,5,2,1,4],\r\n      [5,2,1,4,3],\r\n      [4,3,5,1,2],\r\n      [1,2,3,4,5],\r\n      [2,3,4,1,5]\r\n    ];\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.generateData();\r\n    this.adjust();\r\n    window.addEventListener('resize', this.adjust);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.adjust);\r\n  }\r\n\r\n  generateData = () =>{ //set  ups empty array\r\n\r\n    const size = parseInt(document.getElementById(\"slider\").value);\r\n\r\n    this.setState({\r\n      size: size,\r\n      algorithm: \"null\",\r\n      readyAllocation: null\r\n    });\r\n    this.LEFT = new Array(size);\r\n    this.RIGHT = new Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      this.LEFT[i] = new Array (size);\r\n      this.RIGHT[i] = new Array (size);\r\n    }\r\n    setTimeout(()=>{\r\n      this.fillArray(true);\r\n      this.fillArray(false);   \r\n      this.renderBlocks(); \r\n    },10);\r\n    setTimeout(()=>{\r\n      this.adjustLine(); \r\n    },20);\r\n  }\r\n \r\n  fillArray(left){ //fills selected Array with random preferences\r\n    let ARR = left ? this.LEFT : this.RIGHT;\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      let usedNumber = new Array(this.state.size);\r\n      usedNumber.fill(false);\r\n      for (let j = 0; j < this.state.size; j++) {\r\n        let number = this.randomNumber(1,this.state.size);\r\n        while (usedNumber[number-1]){\r\n          number = this.randomNumber(1,this.state.size); \r\n        }\r\n        ARR[i][j] = number;\r\n        usedNumber[number-1] = true;\r\n      }  \r\n    }\r\n  }\r\n\r\n  randomNumber(start,end){ //puts out a ranom number \r\n    return (Math.floor(Math.random()*((end-start)+1))+start);\r\n  }\r\n\r\n  getRects (){ //gets rect objects from all blocks to generate lines\r\n    const left = document.getElementById(\"leftContainer\").children;\r\n    const right = document.getElementById(\"rightContainer\").children;\r\n    const leftRects = [];\r\n    const rightRects = [];\r\n    for (let i = 0; i < left.length; i++) {\r\n      leftRects.push(left[i].children[0].children[0].getBoundingClientRect());\r\n    }\r\n    leftRects.shift(); //Entfernt Boys Block\r\n    for (let j = 0; j < right.length; j++) {\r\n      rightRects.push(right[j].children[0].children[0].getBoundingClientRect());\r\n    }\r\n    rightRects.shift(); //Entfernt Girls Block\r\n    return [leftRects,rightRects];\r\n  } \r\n\r\n  getLine (rect1, rect2, color){ //returns line between selected rects in the seleced color\r\n    const x1 = rect1.right-10;\r\n    const y1 = (rect1.top+rect1.bottom)/2;\r\n    const x2 = rect2.left+10;\r\n    const y2 = (rect2.top+rect2.bottom)/2;\r\n    const line = (\r\n      <div className=\"svgContainer\" key = {\"Y: \"+y1}>\r\n        <svg id=\"svg\"  width=\"100%\" height=\"100%\"><line x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} strokeWidth=\"5\"/></svg>\r\n      </div>\r\n      );\r\n    //line.style.height = \"500px\"\r\n    return line;\r\n  }  \r\n\r\n  drawLines(allocation){ //\r\n    const leftRects = this.getRects()[0];\r\n    const rightRects = this.getRects()[1];\r\n    const lines = [];\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      const currentPartner = allocation[i].partner-1;    //index 0 \r\n      if(allocation[i].stable === \"pending\"){\r\n        console.error(\"Pending allocation found that not was checked if stable\");\r\n      }\r\n      lines.push(this.getLine(leftRects[i],rightRects[currentPartner],allocation[i].color));\r\n    }\r\n    this.setState({lines: <div id=\"lines\">{lines}</div>}); \r\n    setTimeout(()=>{\r\n      this.adjustSvgContainer();\r\n    },10) \r\n  }   \r\n  \r\n  adjustSvgContainer(){\r\n    const collection = document.getElementsByClassName(\"svgContainer\");\r\n    const containers = Array.from(collection);\r\n    containers.forEach(element => {\r\n      element.style.height = document.documentElement.scrollHeight+\"px\";\r\n    });\r\n  }\r\n\r\n  checkAllocation(allocation){  //checks the hole allocation \r\n    const rightallocation = new Array(this.state.size);\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      rightallocation[allocation[i].partner-1] = {partner: i+1};   //generates allocation for girls\r\n    }\r\n    return this.checkAllocations(allocation,rightallocation);\r\n  }\r\n\r\n  checkAllocations(allocation,rightallocation){\r\n    for (let i = 0; i < allocation.length; i++) {  //gets the preference of the partner\r\n      allocation[i].nChoice = this.getNChoice(this.LEFT[i],allocation[i].partner);\r\n      rightallocation[i].nChoice = this.getNChoice(this.RIGHT[i],rightallocation[i].partner);  \r\n    }\r\n\r\n    for (let i = 0; i < allocation.length; i++) { //checks if the match is stable\r\n      const stable = this.isStable(i,allocation,rightallocation);\r\n      allocation[i].stable = stable;\r\n      if(stable){\r\n        allocation[i].color = this.state.COLORS.stable;\r\n      }else{\r\n        allocation[i].color = this.state.colorBlind ? this.state.COLORS.unstableColorBlind : this.state.COLORS.unstable;\r\n      }\r\n      \r\n    }\r\n    return allocation;\r\n  }\r\n\r\n  getNChoice(preferences,partner){ \r\n    for (let i = 0; i < preferences.length; i++) {\r\n      const choice = preferences[i]  \r\n      if(partner === choice){\r\n        return i+1;\r\n      }\r\n    }      \r\n  }\r\n\r\n  isStable(left,allocation,rightallocation){ //checks a match if its stable\r\n    const countPreferdLeft = allocation[left].nChoice-1;                        //Anzahl bevorzugt links\r\n    const right = allocation[left].partner-1;                         \r\n    const countPreferdRight = rightallocation[right].nChoice-1;                 //Anzahl bevorzugt rechts \r\n\r\n    for (let prefers = 0; prefers < countPreferdLeft; prefers++) {              //prüft alle die vorgezogen wurden\r\n      const preferdChoice = this.LEFT[left][prefers]-1;                              //bevorzugt\r\n      const rightN = rightallocation[preferdChoice].nChoice;                    //Präferenz der bevorzugten bezogen auf den eigentlichen Partner\r\n      let newRightN;                                                            //Präferenz der bevorzugten bezogen auf den aktuell ausgewählten\r\n      for (let j = 0; j < this.RIGHT.length; j++) {  \r\n        if(this.RIGHT[preferdChoice][j]-1 === left){\r\n          newRightN = j;\r\n        }\r\n      }\r\n      \r\n      if(newRightN < rightN){ //Wenn bevorzugte auch ihn bevorzugt -> unstable\r\n        /*console.log(\"LINKS: Aktuell NR \"+(left+1)+\" choice neu NR (0-n): \"+prefers+\" Choice neu: \"+(preferdChoice+1)+\" Rang neu rechts: \"+newRightN+\" Rang aktuell rechts: \"+rightN);\r\n        console.log(\"UNSTABLE\");*/\r\n        return false;\r\n      }\r\n    }\r\n    for (let prefers = 0; prefers < countPreferdRight; prefers++) {             //REDUNDAND\r\n      const preferdChoice = this.RIGHT[right][prefers]-1;          \r\n      const leftN = allocation[preferdChoice].nChoice;                    \r\n      let newLeftN;                                                          \r\n      for (let j = 0; j < this.RIGHT.length; j++) {  \r\n        if(this.LEFT[preferdChoice][j]-1 === right){\r\n          newLeftN = j;\r\n        }\r\n      }  \r\n      if(newLeftN < leftN){\r\n        /*console.log(\"RECHTS: aktuell \"+(right+1)+\" new choice: \"+prefers+\" newN: \"+newLeftN+\" N: \"+leftN+\" preferdChoice: \"+preferdChoice);\r\n        console.log(\"UNSTABLE\");*/\r\n        return false;\r\n      }\r\n    } \r\n\r\n    return true; //if no unstable match found\r\n  }\r\n\r\n\r\n  boysFirst = () => { //creats allocation\r\n    let allocation = new Array(this.state.size);\r\n    const unmatched = this.RIGHT.map( \r\n      ()=> {return(true)\r\n    });\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      for (let index = 0; index < this.state.size; index++) {\r\n        const choice = this.LEFT[i][index]-1;\r\n        if(unmatched[choice]){\r\n          allocation[i]={\r\n            partner: choice+1, \r\n            stable: \"pending\",\r\n            color: this.state.COLORS.pending,\r\n        };\r\n        unmatched[choice] = false;\r\n        break;\r\n        }\r\n      }\r\n    }\r\n    const ready = this.checkAllocation(allocation);\r\n    this.setState({\r\n      algorithm: \"boysFirst\",\r\n      readyAllocation: ready\r\n    });\r\n    this.drawLines(ready);\r\n  };\r\n\r\n  girlsFirst = () => { //creats allocation\r\n\r\n    let allocation = new Array(this.state.size);\r\n    const unmatched = this.RIGHT.map( \r\n      ()=> {return(true)\r\n    });\r\n    for (let i = 0; i < this.LEFT.length; i++) {\r\n      for (let index = 0; index < this.LEFT.length; index++) {\r\n        const choice = this.RIGHT[i][index]-1;\r\n        if(unmatched[choice]){\r\n          allocation[choice] = {\r\n            partner: i+1, \r\n            stable: \"pending\",\r\n            color: this.state.COLORS.pending,\r\n        };\r\n        unmatched[choice] = false;\r\n        break;\r\n        }\r\n      }\r\n    }\r\n    const ready = this.checkAllocation(allocation);\r\n    this.setState({\r\n      algorithm: \"girlsFirst\",\r\n      readyAllocation: ready \r\n    });\r\n    this.drawLines(ready);\r\n  }\r\n\r\n  galeShapley = () => {\r\n    let leftAllocation =  new Array(this.state.size).fill().map(() => ({partner: null}));\r\n    let rightAllocation = new Array(this.state.size).fill().map(() => ({partner: null}));\r\n    let unmatched = leftAllocation.map (\r\n      () => {\r\n        return(true)\r\n      });\r\n    let someoneUnmatched = true;\r\n    let currentLeftIndex = 0;\r\n    while (someoneUnmatched) {\r\n\r\n      for (let i = 0; i < leftAllocation.length; i++) {\r\n        if(leftAllocation[currentLeftIndex].partner!=null){\r\n          break;\r\n        }\r\n        const choice = this.LEFT[currentLeftIndex][i]-1;\r\n        //console.log(\"Index \"+currentLeftIndex+\" choice \"+choice+\" i \"+i);\r\n        if(rightAllocation[choice].partner===null){\r\n          rightAllocation[choice].partner = currentLeftIndex+1;\r\n          leftAllocation[currentLeftIndex].partner = choice+1;\r\n          unmatched[currentLeftIndex] = false;\r\n          break;\r\n        }else{\r\n          const oldPartner = rightAllocation[choice].partner;\r\n          const nChoiceOld = this.getNChoice(this.RIGHT[choice],oldPartner)\r\n          const nChoiceNew = this.getNChoice(this.RIGHT[choice],currentLeftIndex+1);\r\n          //console.log(\"else oldpartner \"+oldPartner+\" oldN \"+nChoiceOld+\" newN \"+nChoiceNew);\r\n          if(nChoiceNew<nChoiceOld){\r\n            rightAllocation[choice].partner = currentLeftIndex+1;\r\n            leftAllocation[oldPartner-1].partner=null;\r\n            leftAllocation[currentLeftIndex].partner = choice+1;\r\n            unmatched[currentLeftIndex] = false;\r\n            unmatched[oldPartner-1] = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    \r\n      someoneUnmatched = false;  //proofs if there is someone whos not matched yet\r\n      for (let i = 0; i < unmatched.length; i++) {\r\n        if(unmatched[i]){\r\n          someoneUnmatched = true;\r\n        }        \r\n      }\r\n      currentLeftIndex++;\r\n      if(currentLeftIndex === leftAllocation.length){\r\n        currentLeftIndex = 0;\r\n      }\r\n    }\r\n    console.log(leftAllocation);\r\n    const ready = this.checkAllocations(leftAllocation,rightAllocation);\r\n    this.setState({\r\n      algorithm: \"galeShapley\",\r\n      readyAllocation: ready \r\n    });\r\n    this.drawLines(ready);\r\n  }\r\n\r\n  testAllocation = () => { //creats allocation\r\n    this.setState({algorithm: \"test\"});\r\n    const allocation = [  \r\n      {partner: 4},\r\n      {partner: 5},\r\n      {partner: 1},\r\n      {partner: 3},\r\n      {partner: 2}\r\n    ];\r\n    this.drawLines(this.checkAllocation(allocation));\r\n  }\r\n\r\n  adjust = () => { \r\n    this.adjustLine();\r\n    this.adjustBlocks();    \r\n  }\r\n  \r\n  adjustLine () {\r\n    if(this.state.readyAllocation!==null){\r\n      this.drawLines(this.state.readyAllocation);\r\n      return;\r\n    }\r\n    switch (this.state.algorithm) {\r\n      case \"null\":\r\n        //console.log(\"No algorithm choosen\");\r\n        this.setState({\r\n          lines: null\r\n        });\r\n        break;\r\n      case \"boysFirst\":\r\n        this.boysFirst();\r\n      break;\r\n      case  \"girlsFirst\":\r\n        this.girlsFirst();\r\n      break;\r\n      case \"galeShapley\":\r\n        this.galeShapley();\r\n      break;\r\n      case  \"test\":\r\n        this.testAllocation();\r\n      break;\r\n      default:\r\n        console.error(\"No state Algorithm\");\r\n        break;    \r\n    }\r\n  };   \r\n  adjustBlocks(){\r\n    const rightContainer = document.getElementById('rightContainer');\r\n    const leftContainer = document.getElementById('leftContainer');\r\n    const menuRect = document.getElementById('menu').getBoundingClientRect();\r\n    rightContainer.style.top = (menuRect.bottom+\"px\");\r\n    leftContainer.style.top = (menuRect.bottom+\"px\");\r\n  }\r\n\r\n  renderBlocks = () =>{\r\n   \r\n    this.setState({leftBlocks:null,rightBlocks:null});\r\n    \r\n    const l = this.LEFT.map( (element,index) =>{\r\n      return(\r\n        <Block key ={\"left\"+index} name = {index+1} \r\n          arr={\r\n            element.map((e) => {\r\n              if(e > 26){ //starts with 1\r\n                e+=6\r\n              }\r\n              return(String.fromCharCode(64+e)) //starts with 1\r\n            })\r\n        }></Block>\r\n      );\r\n    });\r\n    l.unshift(<Block key=\"headlineL\" name=\"Boys\"></Block>)\r\n    const r = this.RIGHT.map( (element,index) =>{\r\n      const currIndex = [index];\r\n      return(\r\n        <Block key ={\"right\"+index} name = { currIndex.map ((value) => {\r\n          if (value > 25){  //starts with 0\r\n            value += 6;\r\n          }\r\n          return (String.fromCharCode(65+value)) //starts with 0\r\n        })} arr={element}></Block>\r\n      );\r\n    });\r\n    r.unshift(<Block key=\"headlineR\" name=\"Girls\"></Block>)\r\n    setTimeout(()=>{\r\n      this.setState({\r\n        leftBlocks: l,\r\n        rightBlocks: r\r\n      });\r\n    }, 50);\r\n  }\r\n\r\n  colorblindMode = () => {\r\n    if(this.state.colorBlind){\r\n      this.setState({colorBlind: false});\r\n      document.getElementById(\"colorblind\").style.backgroundImage = \"linear-gradient(90deg, green 0%,red 65%)\";\r\n    }else{\r\n      this.setState({colorBlind: true});\r\n      document.getElementById(\"colorblind\").style.backgroundImage = \"linear-gradient(90deg, green 30%,blue 100%)\";\r\n    }\r\n    this.setState({readyAllocation: null});\r\n    setTimeout(()=>{\r\n      this.adjust();\r\n    },10);\r\n  }\r\n\r\n  setCounter = () => {\r\n    let val = document.getElementById(\"slider\").value;\r\n    val = Math.floor(val/10) === 1 ? val: \"0\"+val;\r\n    document.getElementById(\"counter\").innerHTML = val;\r\n  }\r\n\r\n  render(){\r\n\r\n    const menu = (\r\n      <div id= 'menu'>\r\n          <span id = 'headline'>Stable Matching</span>\r\n          <Button onClick={this.generateData} text=\"Generate\"></Button>\r\n          <Slider min=\"2\" max=\"15\" onInput={this.setCounter}></Slider>\r\n          <span id =\"counter\">07</span>\r\n          <Button onClick={this.boysFirst} text=\"Boys first\"></Button>\r\n          <Button onClick={this.girlsFirst} text=\"Girls first\"></Button>\r\n          <Button onClick={this.galeShapley} text=\"Gale Shapley algorithm\"></Button>\r\n          <div className=\"toggle\" id=\"colorblind\" onClick = {this.colorblindMode} >Colorblind Mode</div>\r\n        </div>\r\n    );\r\n\r\n    return(\r\n      <div id =\"StableMatching\">\r\n        {menu}\r\n        <div id =\"leftContainer\">\r\n          {this.state.leftBlocks}\r\n        </div>\r\n        <div id=\"rightContainer\">\r\n          {this.state.rightBlocks}\r\n        </div>\r\n        {this.state.lines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import {} from '@testing-library/dom';\nimport React, {} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport StableMatching from './components/stablematching.jsx'\n\nReactDOM.render(\n  <StableMatching></StableMatching>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}