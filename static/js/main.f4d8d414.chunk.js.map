{"version":3,"sources":["reportWebVitals.js","components/block.jsx","components/button.jsx","components/slider.jsx","components/stablematching.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Block","props","state","arr","this","name","className","map","item","index","React","Component","Button","onClick","text","Slider","onInput","defaultValue","id","type","min","max","StableMatching","generateData","size","document","getElementById","value","setState","algorithm","readyAllocation","LEFT","Array","RIGHT","i","setTimeout","fillArray","renderBlocks","adjustLine","studentsFirst","allocation","unmatched","choice","partner","stable","color","COLORS","pending","ready","checkAllocation","drawLines","collegeFirst","fill","length","console","log","testAllocation","adjust","adjustBlocks","leftBlocks","rightBlocks","l","element","e","String","fromCharCode","unshift","r","currIndex","colorblindMode","colorBlind","style","backgroundImage","setCounter","val","Math","floor","innerHTML","lines","unstable","unstableColorBlind","window","addEventListener","removeEventListener","left","ARR","usedNumber","j","number","randomNumber","start","end","random","children","right","leftRects","rightRects","push","getBoundingClientRect","shift","rect1","rect2","x1","y1","top","bottom","x2","y2","width","height","stroke","strokeWidth","getRects","currentPartner","error","getLine","adjustSvgContainer","collection","getElementsByClassName","from","forEach","documentElement","scrollHeight","rightallocation","paared","nChoice","isStable","countPreferdLeft","countPreferdRight","prefers","preferdChoice","rightN","newRightN","leftN","newLeftN","rightContainer","leftContainer","menuRect","menu","ReactDOM","render"],"mappings":"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","file":"static/js/main.f4d8d414.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './css/block.css'\r\n\r\nexport default class Block extends React.Component{  //visual only\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {arr: props.arr};\r\n    }\r\n  \r\n    render(){\r\n  \r\n      if (this.props.arr == null && this.props.name == null){\r\n        return(\r\n          <span className = \"Block\">Props missing</span>\r\n        );\r\n      }\r\n      if(this.props.name == null){\r\n        return(\r\n          <span className = \"Block\">Name missing</span>\r\n        );\r\n      }\r\n      if(this.props.arr == null){\r\n        return(\r\n          <table className = \"Block\">\r\n            <tbody>\r\n              <tr>\r\n                <th>{this.props.name}</th>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n  \r\n      return(\r\n        <div className =\"ComponentBlock\">\r\n          <table className = \"Block\">\r\n            <tbody>\r\n              <tr >\r\n                <th className=\"Name\">{this.props.name}</th>\r\n                <th>{this.state.arr.map((item, index) => (\r\n                  <div key={index} className=\"element\">&nbsp;{item}&nbsp;</div>\r\n                  ))}\r\n                </th>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport './css/button.css'\r\n\r\nexport default class Button extends React.Component{\r\n  \r\n  render(){\r\n      return( \r\n        <div className=\"button\" onClick = {this.props.onClick}>{this.props.text}</div>\r\n      );\r\n    }\r\n}","import React from 'react'\r\nimport './css/slider.css'\r\n\r\nexport default class Slider extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"slider\">\r\n                <input onInput={this.props.onInput} defaultValue =\"7\" id=\"slider\" type=\"range\" min ={this.props.min} max={this.props.max}></input>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Block from './block.jsx';\r\nimport Button from './button.jsx';\r\nimport Slider from './slider.jsx'\r\nimport './css/stablematching.css'\r\n\r\nexport default class StableMatching extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      leftBlocks: [],\r\n      rightBlocks: [],\r\n      size: 6,\r\n      lines: null,\r\n      algorithm: \"null\",\r\n      readyAllocation : null,\r\n      COLORS: {\r\n        unstable: \"red\", \r\n        pending: \"yellow\",  \r\n        stable: \"green\",\r\n        unstableColorBlind: \"blue\"\r\n      },\r\n      colorBlind: false \r\n    };\r\n    this.LEFT = [\r\n      [3,2,5,1,4],\r\n      [1,2,5,3,4],\r\n      [4,3,2,1,5],\r\n      [1,3,4,2,5],\r\n      [1,2,4,5,3]\r\n    ];\r\n    this.RIGHT = [\r\n      [3,5,2,1,4],\r\n      [5,2,1,4,3],\r\n      [4,3,5,1,2],\r\n      [1,2,3,4,5],\r\n      [2,3,4,1,5]\r\n    ];\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.generateData();\r\n    this.adjust();\r\n    window.addEventListener('resize', this.adjust);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.adjust);\r\n  }\r\n\r\n  generateData = () =>{ //set  ups empty array\r\n\r\n    const size = document.getElementById(\"slider\").value;\r\n\r\n    this.setState({\r\n      size: size,\r\n      algorithm: \"null\",\r\n      readyAllocation: null\r\n    });\r\n    this.LEFT = new Array(size);\r\n    this.RIGHT = new Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      this.LEFT[i] = new Array (size);\r\n      this.RIGHT[i] = new Array (size);\r\n    }\r\n    setTimeout(()=>{\r\n      this.fillArray(true);\r\n      this.fillArray(false);   \r\n      this.renderBlocks(); \r\n    },10);\r\n    setTimeout(()=>{\r\n      this.adjustLine(); \r\n    },20);\r\n  }\r\n \r\n  fillArray(left){ //fills selected Array with random preferences\r\n    let ARR = left ? this.LEFT : this.RIGHT;\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      let usedNumber = new Array(this.state.size);\r\n      usedNumber.fill(false);\r\n      for (let j = 0; j < this.state.size; j++) {\r\n        let number = this.randomNumber(1,this.state.size);\r\n        while (usedNumber[number-1]){\r\n          number = this.randomNumber(1,this.state.size); \r\n        }\r\n        ARR[i][j] = number;\r\n        usedNumber[number-1] = true;\r\n      }  \r\n    }\r\n  }\r\n\r\n  randomNumber(start,end){ //puts out a ranom number \r\n    return (Math.floor(Math.random()*((end-start)+1))+start);\r\n  }\r\n\r\n  getRects (){ //gets rect objects from all blocks to generate lines\r\n    const left = document.getElementById(\"leftContainer\").children;\r\n    const right = document.getElementById(\"rightContainer\").children;\r\n    const leftRects = [];\r\n    const rightRects = [];\r\n    for (let i = 0; i < left.length; i++) {\r\n      leftRects.push(left[i].children[0].children[0].getBoundingClientRect());\r\n    }\r\n    leftRects.shift(); //Entfernt Boys Block\r\n    for (let j = 0; j < right.length; j++) {\r\n      rightRects.push(right[j].children[0].children[0].getBoundingClientRect());\r\n    }\r\n    rightRects.shift(); //Entfernt Girls Block\r\n    return [leftRects,rightRects];\r\n  } \r\n\r\n  getLine (rect1, rect2, color){ //returns line between selected rects in the seleced color\r\n    const x1 = rect1.right-10;\r\n    const y1 = (rect1.top+rect1.bottom)/2;\r\n    const x2 = rect2.left+10;\r\n    const y2 = (rect2.top+rect2.bottom)/2;\r\n    const line = (\r\n      <div className=\"svgContainer\">\r\n        <svg id=\"svg\"  width=\"100%\" height=\"100%\"><line x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} strokeWidth=\"5\"/></svg>\r\n      </div>\r\n      );\r\n    //line.style.height = \"500px\"\r\n    return line;\r\n  }  \r\n\r\n  drawLines(allocation){ //\r\n    const leftRects = this.getRects()[0];\r\n    const rightRects = this.getRects()[1];\r\n    const lines = [];\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      const currentPartner = allocation[i].partner-1;    //index 0 \r\n      if(allocation[i].stable === \"pending\"){\r\n        console.error(\"Pending allocation found that not was checked if stable\");\r\n      }\r\n      lines.push(this.getLine(leftRects[i],rightRects[currentPartner],allocation[i].color));\r\n    }\r\n    this.setState({lines: <div id=\"lines\">{lines}</div>}); \r\n    setTimeout(()=>{\r\n      this.adjustSvgContainer();\r\n    },10) \r\n  }   \r\n  \r\n  adjustSvgContainer(){\r\n    const collection = document.getElementsByClassName(\"svgContainer\");\r\n    const containers = Array.from(collection);\r\n    containers.forEach(element => {\r\n      element.style.height = document.documentElement.scrollHeight+\"px\";\r\n    });\r\n  }\r\n\r\n  checkAllocation(allocation){ //checks the hole allocation \r\n    const rightallocation = new Array(this.state.size);\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      rightallocation[allocation[i].partner-1] = {partner: i+1};\r\n    }\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      const paared = allocation[i].partner;\r\n      for (let index = 0; index < allocation.length; index++) {\r\n        const choice = this.LEFT[i][index]  \r\n        if(paared === choice){\r\n          allocation[i].nChoice = index+1;\r\n          break;\r\n        }\r\n      }      \r\n    }\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      const paared = rightallocation[i].partner;\r\n      for (let index = 0; index < allocation.length; index++) {\r\n        const choice = this.RIGHT[i][index]\r\n        if(paared === choice){\r\n          rightallocation[i].nChoice = index+1;\r\n          break;\r\n        }\r\n      }      \r\n    }\r\n    for (let i = 0; i < allocation.length; i++) {\r\n      const stable = this.isStable(i,allocation,rightallocation);\r\n      allocation[i].stable = stable;\r\n      if(stable){\r\n        allocation[i].color = this.state.COLORS.stable;\r\n      }else{\r\n        allocation[i].color = this.state.colorBlind ? this.state.COLORS.unstableColorBlind : this.state.COLORS.unstable;\r\n      }\r\n      \r\n    }\r\n    return allocation;\r\n  }\r\n\r\n  isStable(left,allocation,rightallocation){ //checks a match if its stable\r\n    const countPreferdLeft = allocation[left].nChoice-1;                        //Anzahl bevorzugt links\r\n    const right = allocation[left].partner-1;                         \r\n    const countPreferdRight = rightallocation[right].nChoice-1;                 //Anzahl bevorzugt rechts \r\n\r\n    for (let prefers = 0; prefers < countPreferdLeft; prefers++) {              //prüft alle die vorgezogen wurden\r\n      const preferdChoice = this.LEFT[left][prefers]-1;                              //bevorzugt\r\n      const rightN = rightallocation[preferdChoice].nChoice;                    //Präferenz der bevorzugten bezogen auf den eigentlichen Partner\r\n      let newRightN;                                                            //Präferenz der bevorzugten bezogen auf den aktuell ausgewählten\r\n      for (let j = 0; j < this.RIGHT.length; j++) {  \r\n        if(this.RIGHT[preferdChoice][j]-1 === left){\r\n          newRightN = j;\r\n        }\r\n      }\r\n      \r\n      if(newRightN < rightN){ //Wenn bevorzugte auch ihn bevorzugt -> unstable\r\n        /*console.log(\"LINKS: Aktuell NR \"+(left+1)+\" choice neu NR (0-n): \"+prefers+\" Choice neu: \"+(preferdChoice+1)+\" Rang neu rechts: \"+newRightN+\" Rang aktuell rechts: \"+rightN);\r\n        console.log(\"UNSTABLE\");*/\r\n        return false;\r\n      }\r\n    }\r\n    for (let prefers = 0; prefers < countPreferdRight; prefers++) {             //REDUNDAND\r\n      const preferdChoice = this.RIGHT[right][prefers]-1;          \r\n      const leftN = allocation[preferdChoice].nChoice;                    \r\n      let newLeftN;                                                          \r\n      for (let j = 0; j < this.RIGHT.length; j++) {  \r\n        if(this.LEFT[preferdChoice][j]-1 === right){\r\n          newLeftN = j;\r\n        }\r\n      }  \r\n      if(newLeftN < leftN){\r\n        /*console.log(\"RECHTS: aktuell \"+(right+1)+\" new choice: \"+prefers+\" newN: \"+newLeftN+\" N: \"+leftN+\" preferdChoice: \"+preferdChoice);\r\n        console.log(\"UNSTABLE\");*/\r\n        return false;\r\n      }\r\n    } \r\n\r\n    return true; //if no unstable match found\r\n  }\r\n\r\n\r\n  studentsFirst = () => { //creats allocation\r\n    let allocation = new Array(this.state.size);\r\n    const unmatched = this.RIGHT.map( \r\n      ()=> {return(true)\r\n    });\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      for (let index = 0; index < this.state.size; index++) {\r\n        const choice = this.LEFT[i][index]-1;\r\n        if(unmatched[choice]){\r\n          allocation[i]={\r\n            partner: choice+1, \r\n            stable: \"pending\",\r\n            color: this.state.COLORS.pending,\r\n        };\r\n        unmatched[choice] = false;\r\n        break;\r\n        }\r\n      }\r\n    }\r\n    const ready = this.checkAllocation(allocation);\r\n    this.setState();\r\n    this.setState({\r\n      algorithm: \"studentsFirst\",\r\n      readyAllocation: ready\r\n    });\r\n    this.drawLines(ready);\r\n  };\r\n\r\n  collegeFirst = () => { //creats allocation\r\n    let allocation = new Array(this.state.size);\r\n    allocation.fill({});\r\n    const unmatched = this.LEFT.map( \r\n      ()=> {return(true)\r\n    });\r\n    for (let i = 0; i < this.LEFT.length; i++) {\r\n      for (let index = 0; index < this.LEFT.length; index++) {\r\n        const choice = this.RIGHT[i][index]-1;\r\n        if(unmatched[choice]){\r\n          allocation[choice] = {\r\n            partner: i+1, \r\n            stable: \"pending\",\r\n            color: this.state.COLORS.pending,\r\n        };\r\n        unmatched[choice] = false;\r\n        break;\r\n        }\r\n      }\r\n    }\r\n    console.log(\"Allocation ready: \");\r\n    console.log(allocation);\r\n    const ready = this.checkAllocation(allocation);\r\n    this.setState({\r\n      algorithm: \"collegeFirst\",\r\n      readyAllocation: ready \r\n    });\r\n    this.drawLines(ready);\r\n  }\r\n\r\n  testAllocation = () => { //creats allocation\r\n    this.setState({algorithm: \"test\"});\r\n    const allocation = [  \r\n      {partner: 4},\r\n      {partner: 5},\r\n      {partner: 1},\r\n      {partner: 3},\r\n      {partner: 2}\r\n    ];\r\n    this.drawLines(this.checkAllocation(allocation));\r\n  }\r\n\r\n  adjust = () => { \r\n    this.adjustLine();\r\n    this.adjustBlocks();    \r\n  }\r\n  \r\n  adjustLine () {\r\n    if(this.state.readyAllocation!==null){\r\n      this.drawLines(this.state.readyAllocation);\r\n      return;\r\n    }\r\n    switch (this.state.algorithm) {\r\n      case \"null\":\r\n        //console.log(\"No algorithm choosen\");\r\n        this.setState({\r\n          lines: null\r\n        });\r\n        break;\r\n      case \"studentsFirst\":\r\n        this.studentsFirst();\r\n      break;\r\n      case  \"collegeFirst\":\r\n        this.collegeFirst();\r\n      break;\r\n      case  \"test\":\r\n        this.testAllocation();\r\n      break;\r\n      default:\r\n        console.error(\"No state Algorithm\");\r\n        break;    \r\n    }\r\n  };   \r\n  adjustBlocks(){\r\n    const rightContainer = document.getElementById('rightContainer');\r\n    const leftContainer = document.getElementById('leftContainer');\r\n    const menuRect = document.getElementById('menu').getBoundingClientRect();\r\n    rightContainer.style.top = (menuRect.bottom+\"px\");\r\n    leftContainer.style.top = (menuRect.bottom+\"px\");\r\n  }\r\n\r\n  renderBlocks = () =>{\r\n   \r\n    this.setState({leftBlocks:null,rightBlocks:null});\r\n    \r\n    const l = this.LEFT.map( (element,index) =>{\r\n      return(\r\n        <Block key ={\"left\"+index} name = {index+1} \r\n          arr={\r\n            element.map((e) => {\r\n              if(e > 26){ //starts with 1\r\n                e+=6\r\n              }\r\n              return(String.fromCharCode(64+e)) //starts with 1\r\n            })\r\n        }></Block>\r\n      );\r\n    });\r\n    l.unshift(<Block key=\"headlineL\" name=\"Boys\"></Block>)\r\n    const r = this.RIGHT.map( (element,index) =>{\r\n      const currIndex = [index];\r\n      return(\r\n        <Block key ={\"right\"+index} name = { currIndex.map ((value) => {\r\n          if (value > 25){  //starts with 0\r\n            value += 6;\r\n          }\r\n          return (String.fromCharCode(65+value)) //starts with 0\r\n        })} arr={element}></Block>\r\n      );\r\n    });\r\n    r.unshift(<Block key=\"headlineR\" name=\"Girls\"></Block>)\r\n    setTimeout(()=>{\r\n      this.setState({\r\n        leftBlocks: l,\r\n        rightBlocks: r\r\n      });\r\n    }, 50);\r\n  }\r\n\r\n  colorblindMode = () => {\r\n    if(this.state.colorBlind){\r\n      this.setState({colorBlind: false});\r\n      document.getElementById(\"colorblind\").style.backgroundImage = \"linear-gradient(90deg, green 0%,red 65%)\";\r\n    }else{\r\n      this.setState({colorBlind: true});\r\n      document.getElementById(\"colorblind\").style.backgroundImage = \"linear-gradient(90deg, green 30%,blue 100%)\";\r\n    }\r\n    this.setState({readyAllocation: null});\r\n    setTimeout(()=>{\r\n      this.adjust();\r\n    },10);\r\n  }\r\n\r\n  setCounter = () => {\r\n    let val = document.getElementById(\"slider\").value;\r\n    val = Math.floor(val/10) === 1 ? val: \"0\"+val;\r\n    document.getElementById(\"counter\").innerHTML = val;\r\n  }\r\n\r\n  render(){\r\n\r\n    const menu = (\r\n      <div id= 'menu'>\r\n          <span id = 'headline'>Stable  (not ready)</span>\r\n          <Button onClick={this.generateData} text=\"Generate\"></Button>\r\n          <Slider min=\"2\" max=\"15\" onInput={this.setCounter}></Slider>\r\n          <span id =\"counter\">07</span>\r\n          <Button onClick={this.studentsFirst} text=\"Boys first\"></Button>\r\n          <Button onClick={this.collegeFirst} text=\"Girls first\"></Button>\r\n          <div className=\"toggle\" id=\"colorblind\" onClick = {this.colorblindMode} >Colorblind Mode</div>\r\n        </div>\r\n    );\r\n\r\n    return(\r\n      <div id =\"Programm\">\r\n        {/*<button onClick={this.collegeFirst}>Draw lines</button>*/}\r\n        {menu}\r\n        <div id =\"leftContainer\">\r\n          {this.state.leftBlocks}\r\n        </div>\r\n        <div id=\"rightContainer\">\r\n          {this.state.rightBlocks}\r\n        </div>\r\n        {this.state.lines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import {} from '@testing-library/dom';\nimport React, {} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport StableMatching from './components/stablematching.jsx'\n\nReactDOM.render(\n  <StableMatching></StableMatching>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}